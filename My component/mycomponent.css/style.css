* {
    margin: 0;
    box-sizing: border-box;

}


:root {
    --primeira-color: #ff7833;
    --segunda-color: #0C9ABE;
    --main-header-color: #2B3639;
    --header-houver-color: #06c5f5;
    --card-content-color: #ffff;
    --input-color-: #2b3639;

}



body {
    display: flex;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    min-height: 100vh;
    background-color: #ccc;
    line-height: 1.2em;
    overflow-x: hidden;

}


h1 {
    font-size: 2.5em;
    color: var(--primeira-color);
    padding-bottom: 1em;
}


h2,
h3,
h4 {
    color: var(--segunda-color);
    padding-bottom: .9em;

}


p {
    padding: .5em;
    font-size: .8em;
}



.destaque {
    border-left: 1px solid var(--segunda-color);
    font-size: 1em;
    padding-left: 2em;
    margin-bottom: 2em;


}



.principal {
    padding: 1em 0;
}



.perfil-img {
    width: 40%;
    aspect-ratio: 1 / 1;
    /* Essa configuração aspect-ratio: 1 / 1; Mantém a proporção da imagem em 1:1, ou seja, a imagem será quadrada. */
    object-fit: cover;
    /* Quando você usa object-fit: cover, a imagem é redimensionada para cobrir completamente o contêiner. Isso significa que a imagem será dimensionada de forma a preencher toda a área do contêiner,  cortando as partes que excedem as bordas, se necessário.  */
    border-radius: 50%;
    margin-bottom: 1em;

}


.main-header {
    flex: 0 0 15em;
    /* 0 (flex-grow): O elemento .main-header não crescerá para ocupar mais espaço disponível no contêiner. */
    /* 0 (flex-shrink): O elemento .main-header não diminuirá de tamanho, mesmo que o contêiner tenha menos espaço disponível. */
    /* 25rem (flex-basis): Define o tamanho base do elemento como 25rem. Ou seja, independentemente do tamanho do contêiner pai, .main-header terá sempre uma largura (ou altura, dependendo da direção do contêiner flex) de 25rem. */
    background-color: var(--main-header-color);
}


.main {
    padding: 5em 4.5em;
    background-color: #ccc;


}


.main-nav {
    text-align: right;
    padding: 2em 1.5em;
}



.main-nav ul {
    list-style: none;
}



.main-nav ul a {
    display: block;
    padding: 1.5em;
    color: var(--segunda-color);
    text-decoration: none;
}



.main-nav a:hover {
    color: var(--header-houver-color);
    transition: 1s;
}



.main-nav li {
    border-bottom: 1px solid #e7e7e7;

}



a {
    color: inherit;
}


.rede_sociais {
    display: flex;
    padding-top: 1.5em;
    gap: 1.5em;
}



.underline {
    text-decoration: red wavy underline;
    /* Essa configuração define um sublinhado no texto */
}



.card {
    width: 60%;
    /* Aqui eu apliquei essa configuração para as imagens se enquadrarem no container */
    background-color: var(--card-content-color);
}




.card img {
    width: 100%;
    /* width: 100% faz com que a largura da imagem seja igual à largura do seu contêiner pai. */
}



.cards_content {
    padding: .3em;
}




.card_title {
    padding: .5em;
}



.row {
    display: flex;
    gap: 1em;
    justify-content: space-between;
    margin-bottom: 1em;

}



.row1 {
    display: flex;
    gap: 18.75em;
    justify-content: space-between;
    padding-bottom: 1em;
}


.row1>* {
    flex-grow: 1;
    /* Essa configuração define para o elemento crescer */

}




.alternate {
    list-style-type: none;


}



.alternate li:not(:last-child) {
    border-bottom: 1px solid var(--card-content-color);
    /* Essa configuração CSS aplica uma borda inferior em todos os itens de uma lista (li) dentro de um contêiner com a classe .alternate, exceto para o último item da lista. */

}



.emoji {
    list-style-type: "\1f642";
    /* Essa configuração define por um emoji nas listas */
}



label,
input,
textarea,
select {
    display: inline-block;
    width: 100%;
    padding-bottom: .4em;
}



input,
textarea,
select {
    background-color: hsla(0, 0%, 87%, 0.867);
    padding: 1.2em;
    border-radius: 5px;
    border: none;
    margin-bottom: 2em;
}



input[type="radio"] input[type="checkbox"] {
    width: auto;
}



address {
    padding-top: 1em;
}



.form-curso {
    width: 61%;
}



fieldset {
    border: none;
}



.btn {
    background-color: #06c5f5;
    cursor: pointer;
    color: #ffff;
}



.reset-btn {
    cursor: pointer;
}




.btn:hover {
    background-color: var(--input-color-);
    transition: 3s;
}




.btn-normal {
    padding: .5em;
    margin-bottom: 1em;
    border-radius: 5px;
    border: none;
    background-color: #06c5f5;
    color: #ffff;
    cursor: pointer;
}



.btn-full {
    padding: .5em;
    margin-bottom: 1em;
    border-radius: 5px;
    border: none;
    background-color: #06c5f5;
    color: #ffff;
    cursor: pointer;
    font-size: 1.5em;
}